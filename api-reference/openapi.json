{
  "openapi": "3.1.0",
  "info": {
    "title": "Unsiloed AI Document Processing API",
    "description": "A comprehensive API for document processing, extraction, and analysis using AI-powered tools",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://prod.visionapi.unsiloed.ai",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/cite": {
      "post": {
        "summary": "Extract Data",
        "description": "Extract structured data from PDF documents using custom schemas for citation and data extraction",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The PDF file to process for data extraction. Maximum file size: 100MB"
                  },
                  "schema_data": {
                    "type": "string",
                    "description": "JSON schema defining the structure and fields to extract from the document"
                  }
                },
                "required": ["pdf_file", "schema_data"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string",
                      "description": "Unique identifier for the extraction job"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial job status (typically 'queued')"
                    },
                    "message": {
                      "type": "string",
                      "description": "Descriptive message about the job creation"
                    },
                    "quota_remaining": {
                      "type": "number",
                      "description": "Number of Credits remaining in your quota"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/batch/cite": {
      "post": {
        "summary": "Batch Cite",
        "description": "Process multiple PDF documents with structured data extraction using JSON schema",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Array of PDF files to process"
                  },
                  "schema_data": {
                    "type": "string",
                    "description": "JSON schema defining the structure of data to extract"
                  },
                  "batch_size": {
                    "type": "integer",
                    "default": 10,
                    "description": "Number of PDFs to process in each batch"
                  }
                },
                "required": ["pdf_files", "schema_data"]
              },
              "encoding": {
                "pdf_files": { "contentType": "application/pdf", "explode": true, "style": "form" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "batch_id": {
                      "type": "string",
                      "description": "Unique identifier for the batch processing job"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial batch job status"
                    },
                    "total_files": {
                      "type": "number",
                      "description": "Total number of files submitted for processing"
                    },
                    "message": {
                      "type": "string",
                      "description": "Status message about the batch job creation"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/tables": {
      "post": {
        "summary": "Extract Tables",
        "description": "Extract and structure table data from PDF documents with advanced table detection and parsing",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The PDF file to process for table extraction. Maximum file size: 100MB"
                  }
                },
                "required": ["pdf_file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string",
                      "description": "Unique identifier for the table extraction job"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial job status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Descriptive message about the job creation"
                    },
                    "quota_remaining": {
                      "type": "number",
                      "description": "Number of credits remaining in your quota"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/parse": {
      "post": {
        "summary": "Parse Document",
        "description": "Parse and chunk PDF documents into semantic sections using advanced AI-powered strategies",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file to process"
                  },
                  "use_high_resolution": {
                    "type": "boolean",
                    "description": "Whether to use high-resolution images for cropping and post-processing (default: false)",
                    "default": false
                  },
                  "segmentation_method": {
                    "type": "string",
                    "description": "Document segmentation strategy",
                    "enum": ["Smart Layout Detection", "Page-by-Page Processing"],
                    "default": "Smart Layout Detection"
                  },
                  "OCR_Mode": {
                    "type": "string",
                    "description": "OCR processing strategy",
                    "enum": ["Automatic Detection", "Process All Content"],
                    "default": "Automatic Detection"
                  },
                  "ocr_engine": {
                    "type": "string",
                    "description": "OCR engine selection: 'UnsiloedHawk' (higher accuracy) or 'UnsiloedStorm' (faster processing)",
                    "enum": ["UnsiloedHawk", "UnsiloedStorm"],
                    "default": "UnsiloedHawk"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string",
                      "description": "Unique identifier for the parsing job"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial job status (typically 'Starting')"
                    },
                    "file_name": {
                      "type": "string",
                      "description": "Name of the uploaded file"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "Timestamp when the job was created"
                    },
                    "message": {
                      "type": "string",
                      "description": "Status message about the job creation"
                    },
                    "quota_remaining": {
                      "type": "number",
                      "description": "Remaining page quota for the API key"
                    },
                    "merge_tables": {
                      "type": "boolean",
                      "description": "Whether table merging is enabled"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/classify": {
      "post": {
        "summary": "Classify Document",
        "description": "Classify PDF documents into predefined categories",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_file": { "type": "string", "format": "binary", "description": "PDF file to classify" },
                  "conditions": { "type": "string", "description": "JSON string list of categories e.g. ['category1', 'category2']" }
                },
                "required": ["pdf_file", "conditions"]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted - job started",
            "content": { "application/json": { "schema": { "type": "object", "properties": { "job_id": {"type":"string"}, "status": {"type":"string"}, "message": {"type":"string"} } } } }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/pdf-editor/edit/reparse": {
      "post": {
        "summary": "Edit PDF",
        "description": "Edit PDF documents by replacing text and images at specific bounding boxes with automatic re-parsing",
        "servers": [
          {
            "url": "https://dev.platformbackend.unsiloed.ai/api/v1",
            "description": "Platform Backend Development"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file to edit"
                  },
                  "edit_request": {
                    "type": "string",
                    "description": "JSON string containing list of edit items with bounding box coordinates and replacement content"
                  },
                  "image_files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Optional list of image files to upload and use for image replacements"
                  }
                },
                "required": ["file", "edit_request"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PDF edited successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the PDF edit operation was successful"
                    },
                    "message": {
                      "type": "string",
                      "description": "Status message about the edit operation"
                    },
                    "pdf_url": {
                      "type": "string",
                      "description": "URL of the edited PDF file (if upload_to_storage is true)"
                    },
                    "original_size": {
                      "type": "number",
                      "description": "Size of the original PDF file in bytes"
                    },
                    "edited_size": {
                      "type": "number",
                      "description": "Size of the edited PDF file in bytes"
                    },
                    "items_processed": {
                      "type": "number",
                      "description": "Number of edit items that were processed"
                    },
                    "reparsed": {
                      "type": "boolean",
                      "description": "Whether the edited PDF was submitted for re-parsing"
                    },
                    "new_job_id": {
                      "type": "string",
                      "description": "New job ID for monitoring the re-parsing progress (if job_id was provided)"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid file or edit request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/splitter/split-pdf": {
      "post": {
        "summary": "Split Document",
        "description": "Split PDF documents by classifying pages into categories",
        "parameters": [
          { "in": "query", "name": "classes", "schema": {"type": "string"}, "required": true, "description": "Comma-separated categories" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary", "description": "PDF to split" },
                  "categories": { "type": "string", "description": "JSON string with category descriptions" }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Split started", "content": { "application/json": { "schema": { "type": "object" } } } }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/splitter/split-pdf-v1": {
      "post": {
        "summary": "Split Document (v1)",
        "description": "Split PDF documents by classifying pages into categories",
        "parameters": [
          {
            "in": "query",
            "name": "classes",
            "schema": { "type": "string" },
            "required": true,
            "description": "Comma-separated categories (e.g., invoice,contract)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary", "description": "PDF file to split" },
                  "categories": { "type": "string", "description": "JSON string with category descriptions" }
                },
                "required": ["file"]
              },
              "encoding": {
                "file": { "contentType": "application/pdf" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Split started",
            "content": { "application/json": { "schema": { "type": "object" } } }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/parse/{job_id}": {
      "get": {
        "summary": "Get Parse Job Status",
        "description": "Check the status and retrieve results of parsing jobs",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "schema": { "type": "string" },
            "required": true,
            "description": "The unique identifier of the parsing job to check"
          }
        ],
        "responses": {
          "200": {
            "description": "Job status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": { "type": "string", "description": "Unique identifier for the parsing job" },
                    "status": { "type": "string", "description": "Current job status: Starting, Processing, Succeeded, or Failed" },
                    "created_at": { "type": "string", "description": "Timestamp when the job was created" },
                    "started_at": { "type": "string", "description": "Timestamp when processing started" },
                    "finished_at": { "type": "string", "description": "Timestamp when processing completed" },
                    "total_chunks": { "type": "number", "description": "Number of chunks in the document" },
                    "chunks": { "type": "array", "description": "Array of document chunks with detailed analysis" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": { "type": "string" }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": { "type": "array" }
                  }
                }
              }
            }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/jobs/{job_id}": {
      "get": {
        "summary": "Get Job Status",
        "description": "Check the status and progress of asynchronous processing jobs",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "schema": { "type": "string" },
            "required": true,
            "description": "The unique identifier of the job to check"
          }
        ],
        "responses": {
          "200": {
            "description": "Job status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": { "type": "string", "description": "Unique identifier for the job" },
                    "status": { "type": "string", "description": "Current job status" },
                    "created_at": { "type": "string", "description": "Timestamp when the job was created" },
                    "message": { "type": "string", "description": "Status message about the job" }
                  }
                }
              }
            }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/jobs/{job_id}/result": {
      "get": {
        "summary": "Get Job Results",
        "description": "Retrieve the results of a completed processing job",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "schema": { "type": "string" },
            "required": true,
            "description": "The unique identifier of the job"
          }
        ],
        "responses": {
          "200": {
            "description": "Job results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Job results object"
                }
              }
            }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/classify/{job_id}": {
      "get": {
        "summary": "Get Classification Job Status",
        "description": "Check the status and progress of classification jobs and retrieve results",
        "parameters": [
          {
            "in": "path",
            "name": "job_id",
            "schema": { "type": "string" },
            "required": true,
            "description": "The unique identifier of the classification job"
          }
        ],
        "responses": {
          "200": {
            "description": "Classification job status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Classification job status and results"
                }
              }
            }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/org/get_usage": {
      "get": {
        "summary": "Get Organization Usage",
        "description": "Get organization usage information including current usage, monthly limit, and remaining quota",
        "servers": [
          {
            "url": "https://dev.platformbackend.unsiloed.ai/api/v1",
            "description": "Platform Backend"
          }
        ],
        "responses": {
          "200": {
            "description": "Usage information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "org_id": {
                      "type": "string",
                      "description": "Unique identifier for your organization"
                    },
                    "org_name": {
                      "type": "string",
                      "description": "Name of your organization"
                    },
                    "current_usage": {
                      "type": "number",
                      "description": "Number of credits used in the current billing cycle"
                    },
                    "usage_limit": {
                      "type": "number",
                      "description": "Total  usage limit (credits) for your organization"
                    },
                    "remaining_quota": {
                      "type": "number",
                      "description": "Number of credits remaining in the current billing cycle"
                    },
                    "last_billed_date": {
                      "type": "string",
                      "format": "date",
                      "description": "Date of the last billing cycle reset (YYYY-MM-DD)"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "API key is required. Please provide 'api-key' in the request header."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Organization not found"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "api-key"
      }
    }
  }
}