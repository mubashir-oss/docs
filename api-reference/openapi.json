{
  "openapi": "3.1.0",
  "info": {
    "title": "Unsiloed AI Document Processing API",
    "description": "A comprehensive API for document processing, extraction, and analysis using AI-powered tools",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://prod.visionapi.unsiloed.ai",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/cite": {
      "post": {
        "summary": "Extract Data",
        "description": "Extract structured data from PDF documents using custom schemas for citation and data extraction",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The PDF file to process for data extraction. Maximum file size: 100MB"
                  },
                  "schema_data": {
                    "type": "string",
                    "description": "JSON schema defining the structure and fields to extract from the document"
                  }
                },
                "required": ["pdf_file", "schema_data"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string",
                      "description": "Unique identifier for the extraction job"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial job status (typically 'queued')"
                    },
                    "message": {
                      "type": "string",
                      "description": "Descriptive message about the job creation"
                    },
                    "quota_remaining": {
                      "type": "number",
                      "description": "Number of Credits remaining in your quota"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/batch/cite": {
      "post": {
        "summary": "Batch Cite",
        "description": "Process multiple PDF documents with structured data extraction using JSON schema",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    },
                    "description": "Array of PDF files to process"
                  },
                  "schema_data": {
                    "type": "string",
                    "description": "JSON schema defining the structure of data to extract"
                  },
                  "batch_size": {
                    "type": "integer",
                    "default": 10,
                    "description": "Number of PDFs to process in each batch"
                  }
                },
                "required": ["pdf_files", "schema_data"]
              },
              "encoding": {
                "pdf_files": { "contentType": "application/pdf", "explode": true, "style": "form" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "batch_id": {
                      "type": "string",
                      "description": "Unique identifier for the batch processing job"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial batch job status"
                    },
                    "total_files": {
                      "type": "number",
                      "description": "Total number of files submitted for processing"
                    },
                    "message": {
                      "type": "string",
                      "description": "Status message about the batch job creation"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/tables": {
      "post": {
        "summary": "Extract Tables",
        "description": "Extract and structure table data from PDF documents with advanced table detection and parsing",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_file": {
                    "type": "string",
                    "format": "binary",
                    "description": "The PDF file to process for table extraction. Maximum file size: 100MB"
                  }
                },
                "required": ["pdf_file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job_id": {
                      "type": "string",
                      "description": "Unique identifier for the table extraction job"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial job status"
                    },
                    "message": {
                      "type": "string",
                      "description": "Descriptive message about the job creation"
                    },
                    "quota_remaining": {
                      "type": "number",
                      "description": "Number of credits remaining in your quota"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/parse": {
      "post": {
        "summary": "Parse Document",
        "description": "Parse and chunk PDF documents into semantic sections using advanced AI-powered strategies",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "PDF file to process"
                  },
                  "high_resolution": {
                    "type": "boolean",
                    "description": "Whether to use high-resolution images for cropping and post-processing"
                  },
                  "segmentation_strategy": {
                    "type": "string",
                    "description": "Document segmentation strategy: 'LayoutAnalysis' or 'Page'"
                  }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": {
                      "type": "string",
                      "description": "Unique identifier for the parsing task"
                    },
                    "status": {
                      "type": "string",
                      "description": "Initial task status"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/classify": {
      "post": {
        "summary": "Classify Document",
        "description": "Classify PDF documents into predefined categories",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "pdf_file": { "type": "string", "format": "binary", "description": "PDF file to classify" },
                  "conditions": { "type": "string", "description": "JSON string list of categories e.g. ['category1', 'category2']" }
                },
                "required": ["pdf_file", "conditions"]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted - job started",
            "content": { "application/json": { "schema": { "type": "object", "properties": { "job_id": {"type":"string"}, "status": {"type":"string"}, "message": {"type":"string"} } } } }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/splitter/split-pdf": {
      "post": {
        "summary": "Split Document",
        "description": "Split PDF documents by classifying pages into categories",
        "parameters": [
          { "in": "query", "name": "classes", "schema": {"type": "string"}, "required": true, "description": "Comma-separated categories" }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary", "description": "PDF to split" },
                  "categories": { "type": "string", "description": "JSON string with category descriptions" }
                },
                "required": ["file"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Split started", "content": { "application/json": { "schema": { "type": "object" } } } }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    },
    "/splitter/split-pdf-v1": {
      "post": {
        "summary": "Split Document (v1)",
        "description": "Split PDF documents by classifying pages into categories",
        "parameters": [
          {
            "in": "query",
            "name": "classes",
            "schema": { "type": "string" },
            "required": true,
            "description": "Comma-separated categories (e.g., invoice,contract)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary", "description": "PDF file to split" },
                  "categories": { "type": "string", "description": "JSON string with category descriptions" }
                },
                "required": ["file"]
              },
              "encoding": {
                "file": { "contentType": "application/pdf" }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Split started",
            "content": { "application/json": { "schema": { "type": "object" } } }
          }
        },
        "security": [ { "apiKeyAuth": [] } ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "api-key"
      }
    }
  }
}